'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class SAC_MindugarEntitiesVisual
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=SAC_MindugarEntitiesVisual")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property Solicitud_HorasExtras() As DbSet(Of Solicitud_HorasExtras)
    Public Overridable Property Solicitud_HorasExtras_Colaboradores() As DbSet(Of Solicitud_HorasExtras_Colaboradores)
    Public Overridable Property Solicitud_Salida() As DbSet(Of Solicitud_Salida)

    Public Overridable Function Solicitud_Buscar_Correo(nombreCompleto As String) As ObjectResult(Of String)
        Dim nombreCompletoParameter As ObjectParameter = If(nombreCompleto IsNot Nothing, New ObjectParameter("nombreCompleto", nombreCompleto), New ObjectParameter("nombreCompleto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("Solicitud_Buscar_Correo", nombreCompletoParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_Datos_Trabajador(nombreCompleto As String) As ObjectResult(Of Solicitud_Buscar_Datos_Trabajador_Result)
        Dim nombreCompletoParameter As ObjectParameter = If(nombreCompleto IsNot Nothing, New ObjectParameter("nombreCompleto", nombreCompleto), New ObjectParameter("nombreCompleto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Solicitud_Buscar_Datos_Trabajador_Result)("Solicitud_Buscar_Datos_Trabajador", nombreCompletoParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_Empleado_PorNombre(nombre As String) As ObjectResult(Of String)
        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("Solicitud_Buscar_Empleado_PorNombre", nombreParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_Empleado_PorRut(rut As String) As ObjectResult(Of String)
        Dim rutParameter As ObjectParameter = If(rut IsNot Nothing, New ObjectParameter("rut", rut), New ObjectParameter("rut", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("Solicitud_Buscar_Empleado_PorRut", rutParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_HoraExtra_PorFechas(fecha_inicio As Nullable(Of Date), fecha_termino As Nullable(Of Date)) As ObjectResult(Of Solicitud_Buscar_HoraExtra_PorFechas_Result)
        Dim fecha_inicioParameter As ObjectParameter = If(fecha_inicio.HasValue, New ObjectParameter("fecha_inicio", fecha_inicio), New ObjectParameter("fecha_inicio", GetType(Date)))

        Dim fecha_terminoParameter As ObjectParameter = If(fecha_termino.HasValue, New ObjectParameter("fecha_termino", fecha_termino), New ObjectParameter("fecha_termino", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Solicitud_Buscar_HoraExtra_PorFechas_Result)("Solicitud_Buscar_HoraExtra_PorFechas", fecha_inicioParameter, fecha_terminoParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_HoraExtra_PorFechasEmpresa(fecha_inicio As Nullable(Of Date), fecha_termino As Nullable(Of Date), empresa As String) As ObjectResult(Of Solicitud_Buscar_HoraExtra_PorFechasEmpresa_Result)
        Dim fecha_inicioParameter As ObjectParameter = If(fecha_inicio.HasValue, New ObjectParameter("fecha_inicio", fecha_inicio), New ObjectParameter("fecha_inicio", GetType(Date)))

        Dim fecha_terminoParameter As ObjectParameter = If(fecha_termino.HasValue, New ObjectParameter("fecha_termino", fecha_termino), New ObjectParameter("fecha_termino", GetType(Date)))

        Dim empresaParameter As ObjectParameter = If(empresa IsNot Nothing, New ObjectParameter("empresa", empresa), New ObjectParameter("empresa", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Solicitud_Buscar_HoraExtra_PorFechasEmpresa_Result)("Solicitud_Buscar_HoraExtra_PorFechasEmpresa", fecha_inicioParameter, fecha_terminoParameter, empresaParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_HoraExtra_PorId(id As Nullable(Of Integer)) As ObjectResult(Of Solicitud_Buscar_HoraExtra_PorId_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Solicitud_Buscar_HoraExtra_PorId_Result)("Solicitud_Buscar_HoraExtra_PorId", idParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_HoraExtra_PorRutFechas(rut As String, fecha_inicio As Nullable(Of Date), fecha_termino As Nullable(Of Date)) As ObjectResult(Of Solicitud_Buscar_HoraExtra_PorRutFechas_Result)
        Dim rutParameter As ObjectParameter = If(rut IsNot Nothing, New ObjectParameter("rut", rut), New ObjectParameter("rut", GetType(String)))

        Dim fecha_inicioParameter As ObjectParameter = If(fecha_inicio.HasValue, New ObjectParameter("fecha_inicio", fecha_inicio), New ObjectParameter("fecha_inicio", GetType(Date)))

        Dim fecha_terminoParameter As ObjectParameter = If(fecha_termino.HasValue, New ObjectParameter("fecha_termino", fecha_termino), New ObjectParameter("fecha_termino", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Solicitud_Buscar_HoraExtra_PorRutFechas_Result)("Solicitud_Buscar_HoraExtra_PorRutFechas", rutParameter, fecha_inicioParameter, fecha_terminoParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_Permisos_PorFecha(fecha_inicio As Nullable(Of Date), fecha_termino As Nullable(Of Date), empresa As String) As ObjectResult(Of Solicitud_Buscar_Permisos_PorFecha_Result)
        Dim fecha_inicioParameter As ObjectParameter = If(fecha_inicio.HasValue, New ObjectParameter("fecha_inicio", fecha_inicio), New ObjectParameter("fecha_inicio", GetType(Date)))

        Dim fecha_terminoParameter As ObjectParameter = If(fecha_termino.HasValue, New ObjectParameter("fecha_termino", fecha_termino), New ObjectParameter("fecha_termino", GetType(Date)))

        Dim empresaParameter As ObjectParameter = If(empresa IsNot Nothing, New ObjectParameter("empresa", empresa), New ObjectParameter("empresa", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Solicitud_Buscar_Permisos_PorFecha_Result)("Solicitud_Buscar_Permisos_PorFecha", fecha_inicioParameter, fecha_terminoParameter, empresaParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_Permisos_PorId(id As Nullable(Of Integer)) As ObjectResult(Of Solicitud_Buscar_Permisos_PorId_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Solicitud_Buscar_Permisos_PorId_Result)("Solicitud_Buscar_Permisos_PorId", idParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_Permisos_PorRut(rut As String) As ObjectResult(Of Solicitud_Buscar_Permisos_PorRut_Result)
        Dim rutParameter As ObjectParameter = If(rut IsNot Nothing, New ObjectParameter("rut", rut), New ObjectParameter("rut", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Solicitud_Buscar_Permisos_PorRut_Result)("Solicitud_Buscar_Permisos_PorRut", rutParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_Permisos_PorRutFecha(rut As String, fecha_inicio As Nullable(Of Date), fecha_termino As Nullable(Of Date)) As ObjectResult(Of Solicitud_Buscar_Permisos_PorRutFecha_Result)
        Dim rutParameter As ObjectParameter = If(rut IsNot Nothing, New ObjectParameter("rut", rut), New ObjectParameter("rut", GetType(String)))

        Dim fecha_inicioParameter As ObjectParameter = If(fecha_inicio.HasValue, New ObjectParameter("fecha_inicio", fecha_inicio), New ObjectParameter("fecha_inicio", GetType(Date)))

        Dim fecha_terminoParameter As ObjectParameter = If(fecha_termino.HasValue, New ObjectParameter("fecha_termino", fecha_termino), New ObjectParameter("fecha_termino", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Solicitud_Buscar_Permisos_PorRutFecha_Result)("Solicitud_Buscar_Permisos_PorRutFecha", rutParameter, fecha_inicioParameter, fecha_terminoParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_Responsables_HorasExtras(area As String, empresa As String) As ObjectResult(Of String)
        Dim areaParameter As ObjectParameter = If(area IsNot Nothing, New ObjectParameter("area", area), New ObjectParameter("area", GetType(String)))

        Dim empresaParameter As ObjectParameter = If(empresa IsNot Nothing, New ObjectParameter("empresa", empresa), New ObjectParameter("empresa", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("Solicitud_Buscar_Responsables_HorasExtras", areaParameter, empresaParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_Responsables_Permisos(area As String, empresa As String, nombreCompleto As String) As ObjectResult(Of String)
        Dim areaParameter As ObjectParameter = If(area IsNot Nothing, New ObjectParameter("area", area), New ObjectParameter("area", GetType(String)))

        Dim empresaParameter As ObjectParameter = If(empresa IsNot Nothing, New ObjectParameter("empresa", empresa), New ObjectParameter("empresa", GetType(String)))

        Dim nombreCompletoParameter As ObjectParameter = If(nombreCompleto IsNot Nothing, New ObjectParameter("nombreCompleto", nombreCompleto), New ObjectParameter("nombreCompleto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("Solicitud_Buscar_Responsables_Permisos", areaParameter, empresaParameter, nombreCompletoParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_Solicitudes_HoraExtra(nombreCompleto As String) As ObjectResult(Of Nullable(Of Integer))
        Dim nombreCompletoParameter As ObjectParameter = If(nombreCompleto IsNot Nothing, New ObjectParameter("nombreCompleto", nombreCompleto), New ObjectParameter("nombreCompleto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("Solicitud_Buscar_Solicitudes_HoraExtra", nombreCompletoParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_Solicitudes_Permisos(nombreCompleto As String, fecha_inicio As Nullable(Of Date), fecha_termino As Nullable(Of Date)) As ObjectResult(Of Solicitud_Buscar_Solicitudes_Permisos_Result)
        Dim nombreCompletoParameter As ObjectParameter = If(nombreCompleto IsNot Nothing, New ObjectParameter("nombreCompleto", nombreCompleto), New ObjectParameter("nombreCompleto", GetType(String)))

        Dim fecha_inicioParameter As ObjectParameter = If(fecha_inicio.HasValue, New ObjectParameter("fecha_inicio", fecha_inicio), New ObjectParameter("fecha_inicio", GetType(Date)))

        Dim fecha_terminoParameter As ObjectParameter = If(fecha_termino.HasValue, New ObjectParameter("fecha_termino", fecha_termino), New ObjectParameter("fecha_termino", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Solicitud_Buscar_Solicitudes_Permisos_Result)("Solicitud_Buscar_Solicitudes_Permisos", nombreCompletoParameter, fecha_inicioParameter, fecha_terminoParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_Solicitudes_PermisosPendiente(nombreCompleto As String, fecha_inicio As Nullable(Of Date), fecha_termino As Nullable(Of Date)) As ObjectResult(Of Solicitud_Buscar_Solicitudes_PermisosPendiente_Result)
        Dim nombreCompletoParameter As ObjectParameter = If(nombreCompleto IsNot Nothing, New ObjectParameter("nombreCompleto", nombreCompleto), New ObjectParameter("nombreCompleto", GetType(String)))

        Dim fecha_inicioParameter As ObjectParameter = If(fecha_inicio.HasValue, New ObjectParameter("fecha_inicio", fecha_inicio), New ObjectParameter("fecha_inicio", GetType(Date)))

        Dim fecha_terminoParameter As ObjectParameter = If(fecha_termino.HasValue, New ObjectParameter("fecha_termino", fecha_termino), New ObjectParameter("fecha_termino", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Solicitud_Buscar_Solicitudes_PermisosPendiente_Result)("Solicitud_Buscar_Solicitudes_PermisosPendiente", nombreCompletoParameter, fecha_inicioParameter, fecha_terminoParameter)
    End Function

    Public Overridable Function Solicitud_Buscar_Todas_HoraExtra(nombreCompleto As String, fecha_inicio As Nullable(Of Date), fecha_termino As Nullable(Of Date)) As ObjectResult(Of Nullable(Of Integer))
        Dim nombreCompletoParameter As ObjectParameter = If(nombreCompleto IsNot Nothing, New ObjectParameter("nombreCompleto", nombreCompleto), New ObjectParameter("nombreCompleto", GetType(String)))

        Dim fecha_inicioParameter As ObjectParameter = If(fecha_inicio.HasValue, New ObjectParameter("fecha_inicio", fecha_inicio), New ObjectParameter("fecha_inicio", GetType(Date)))

        Dim fecha_terminoParameter As ObjectParameter = If(fecha_termino.HasValue, New ObjectParameter("fecha_termino", fecha_termino), New ObjectParameter("fecha_termino", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("Solicitud_Buscar_Todas_HoraExtra", nombreCompletoParameter, fecha_inicioParameter, fecha_terminoParameter)
    End Function

    Public Overridable Function Solicitud_Empleados_Sugeridos(fecha_SolicitudIni As String) As ObjectResult(Of Solicitud_Empleados_Sugeridos_Result)
        Dim fecha_SolicitudIniParameter As ObjectParameter = If(fecha_SolicitudIni IsNot Nothing, New ObjectParameter("Fecha_SolicitudIni", fecha_SolicitudIni), New ObjectParameter("Fecha_SolicitudIni", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Solicitud_Empleados_Sugeridos_Result)("Solicitud_Empleados_Sugeridos", fecha_SolicitudIniParameter)
    End Function

    Public Overridable Function Solicitud_Empleados_Sugeridos_Area(area As String) As ObjectResult(Of Solicitud_Empleados_Sugeridos_Area_Result)
        Dim areaParameter As ObjectParameter = If(area IsNot Nothing, New ObjectParameter("area", area), New ObjectParameter("area", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Solicitud_Empleados_Sugeridos_Area_Result)("Solicitud_Empleados_Sugeridos_Area", areaParameter)
    End Function

    Public Overridable Function Solicitud_Empleados_Sugeridos_Empresa(empresa As String) As ObjectResult(Of Solicitud_Empleados_Sugeridos_Empresa_Result)
        Dim empresaParameter As ObjectParameter = If(empresa IsNot Nothing, New ObjectParameter("empresa", empresa), New ObjectParameter("empresa", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Solicitud_Empleados_Sugeridos_Empresa_Result)("Solicitud_Empleados_Sugeridos_Empresa", empresaParameter)
    End Function

    Public Overridable Function Solicitud_HoraExtra_Autorizar(nombre As String, id As Nullable(Of Integer), responsable_resolucion As String) As Integer
        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim responsable_resolucionParameter As ObjectParameter = If(responsable_resolucion IsNot Nothing, New ObjectParameter("responsable_resolucion", responsable_resolucion), New ObjectParameter("responsable_resolucion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("Solicitud_HoraExtra_Autorizar", nombreParameter, idParameter, responsable_resolucionParameter)
    End Function

    Public Overridable Function Solicitud_HoraExtra_Rechazar(nombre As String, id As Nullable(Of Integer), responsable_resolucion As String) As Integer
        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("nombre", nombre), New ObjectParameter("nombre", GetType(String)))

        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim responsable_resolucionParameter As ObjectParameter = If(responsable_resolucion IsNot Nothing, New ObjectParameter("responsable_resolucion", responsable_resolucion), New ObjectParameter("responsable_resolucion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("Solicitud_HoraExtra_Rechazar", nombreParameter, idParameter, responsable_resolucionParameter)
    End Function

    Public Overridable Function Solicitud_Permiso_Autorizar(id As Nullable(Of Integer), responsable As String) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim responsableParameter As ObjectParameter = If(responsable IsNot Nothing, New ObjectParameter("responsable", responsable), New ObjectParameter("responsable", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("Solicitud_Permiso_Autorizar", idParameter, responsableParameter)
    End Function

    Public Overridable Function Solicitud_Permiso_Rechazar(id As Nullable(Of Integer), responsable As String) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim responsableParameter As ObjectParameter = If(responsable IsNot Nothing, New ObjectParameter("responsable", responsable), New ObjectParameter("responsable", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("Solicitud_Permiso_Rechazar", idParameter, responsableParameter)
    End Function

    Public Overridable Function Solicitud_Trabador_Con_Solicitud(nombreCompleto As String) As ObjectResult(Of String)
        Dim nombreCompletoParameter As ObjectParameter = If(nombreCompleto IsNot Nothing, New ObjectParameter("nombreCompleto", nombreCompleto), New ObjectParameter("nombreCompleto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("Solicitud_Trabador_Con_Solicitud", nombreCompletoParameter)
    End Function

    Public Overridable Function Solicitud_Validar_Trabajador_HoraExtra(rut As String, fecha As Nullable(Of Date)) As Integer
        Dim rutParameter As ObjectParameter = If(rut IsNot Nothing, New ObjectParameter("rut", rut), New ObjectParameter("rut", GetType(String)))

        Dim fechaParameter As ObjectParameter = If(fecha.HasValue, New ObjectParameter("fecha", fecha), New ObjectParameter("fecha", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("Solicitud_Validar_Trabajador_HoraExtra", rutParameter, fechaParameter)
    End Function

    Public Overridable Function Solicitud_Verificar_Resolucion(id As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("Solicitud_Verificar_Resolucion", idParameter)
    End Function

End Class
